{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/davidpaley/Projects/city-furniture/next-image-example/component/image/Image.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from \"react\";\nimport NextImage from \"next/image\";\nconst Image = /*#__PURE__*/React.forwardRef(({\n  id,\n  className,\n  itemProp,\n  src,\n  alt,\n  title,\n  fallbackImage,\n  width,\n  height,\n  priority,\n  customPreload,\n  layout = \"fixed\",\n  testId,\n  checkBrokenImageInCustomPreload,\n  // CHECK WITH GABY IF HE IS STILL USING THESE PARAMETERS\n  onSuccess,\n  onError\n}, ref) => {\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(false); // React.useEffect(() => {\n  //   // If an image fails to preload, handle it here in order\n  //   // to avoid reloading it again as a broken image.\n  //   if (!priority) {\n  //     const preload = async () => {\n  //       try {\n  //         await preloadImage(src, checkBrokenImageInCustomPreload);\n  //         setLoading(false);\n  //         onSuccess && onSuccess(src);\n  //       } catch (imageURL) {\n  //         setError(true);\n  //         onError && onError(imageURL);\n  //       }\n  //     };\n  //     preload();\n  //   }\n  // }, [src]);\n\n  const isFallback = !src || customPreload && error || customPreload && loading;\n  const imageProps = {\n    id,\n    src: isFallback ? \"/no-images-placeholder.jpg\" : src,\n    alt,\n    title,\n    itemProp,\n    priority\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    ref: ref,\n    \"data-testid\": testId,\n    style: {\n      width: \"100%\"\n    },\n    children: width !== undefined && height !== undefined ? /*#__PURE__*/_jsxDEV(NextImage, _objectSpread(_objectSpread({}, imageProps), {}, {\n      \"data-testid\": isFallback ? \"fallbackImage\" : \"image\",\n      layout: layout,\n      width: width,\n      height: height\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(NextImage, _objectSpread(_objectSpread({}, imageProps), {}, {\n      \"data-testid\": isFallback ? \"fallbackImage\" : \"image\",\n      layout: \"fill\"\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 7\n  }, this);\n});\nImage.displayName = \"Image\";\nexport default Image;","map":{"version":3,"sources":["/Users/davidpaley/Projects/city-furniture/next-image-example/component/image/Image.tsx"],"names":["React","NextImage","Image","forwardRef","id","className","itemProp","src","alt","title","fallbackImage","width","height","priority","customPreload","layout","testId","checkBrokenImageInCustomPreload","onSuccess","onError","ref","loading","setLoading","useState","error","setError","isFallback","imageProps","undefined","displayName"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAwD,YAAxD;AAuBA,MAAMC,KAAK,gBAAGF,KAAK,CAACG,UAAN,CACZ,CACE;AACEC,EAAAA,EADF;AAEEC,EAAAA,SAFF;AAGEC,EAAAA,QAHF;AAIEC,EAAAA,GAJF;AAKEC,EAAAA,GALF;AAMEC,EAAAA,KANF;AAOEC,EAAAA,aAPF;AAQEC,EAAAA,KARF;AASEC,EAAAA,MATF;AAUEC,EAAAA,QAVF;AAWEC,EAAAA,aAXF;AAYEC,EAAAA,MAAM,GAAG,OAZX;AAaEC,EAAAA,MAbF;AAcEC,EAAAA,+BAdF;AAeE;AACAC,EAAAA,SAhBF;AAiBEC,EAAAA;AAjBF,CADF,EAoBEC,GApBF,KAqBkB;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBtB,KAAK,CAACuB,QAAN,CAAe,IAAf,CAA9B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBzB,KAAK,CAACuB,QAAN,CAAe,KAAf,CAA1B,CAFgB,CAIhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMG,UAAU,GACd,CAACnB,GAAD,IAASO,aAAa,IAAIU,KAA1B,IAAqCV,aAAa,IAAIO,OADxD;AAGA,QAAMM,UAA+D,GAAG;AACtEvB,IAAAA,EADsE;AAEtEG,IAAAA,GAAG,EAAEmB,UAAU,GAAG,4BAAH,GAAkCnB,GAFqB;AAGtEC,IAAAA,GAHsE;AAItEC,IAAAA,KAJsE;AAKtEH,IAAAA,QALsE;AAMtEO,IAAAA;AANsE,GAAxE;AASA,sBACE;AACE,IAAA,SAAS,EAAER,SADb;AAEE,IAAA,GAAG,EAAEe,GAFP;AAGE,mBAAaJ,MAHf;AAIE,IAAA,KAAK,EAAE;AAAEL,MAAAA,KAAK,EAAE;AAAT,KAJT;AAAA,cAMGA,KAAK,KAAKiB,SAAV,IAAuBhB,MAAM,KAAKgB,SAAlC,gBACC,QAAC,SAAD,kCACMD,UADN;AAEE,qBAAaD,UAAU,GAAG,eAAH,GAAqB,OAF9C;AAGE,MAAA,MAAM,EAAEX,MAHV;AAIE,MAAA,KAAK,EAAEJ,KAJT;AAKE,MAAA,MAAM,EAAEC;AALV;AAAA;AAAA;AAAA;AAAA,YADD,gBASC,QAAC,SAAD,kCACMe,UADN;AAEE,qBAAaD,UAAU,GAAG,eAAH,GAAqB,OAF9C;AAGE,MAAA,MAAM,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA;AAfJ;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAhFW,CAAd;AAmFAxB,KAAK,CAAC2B,WAAN,GAAoB,OAApB;AAEA,eAAe3B,KAAf","sourcesContent":["import * as React from \"react\";\nimport NextImage, { ImageProps as NextImageProps } from \"next/image\";\nimport { preloadImage } from \"../../utils/customPreload\";\nimport styles from \"../styles/Home.module.css\";\n\ninterface IImageProps {\n  id?: string;\n  className?: string;\n  itemProp?: string;\n  title?: string;\n  src?: string;\n  alt: string;\n  onSuccess?: (imgUrl: string) => void;\n  onError?: (imgUrl: string) => void;\n  fallbackImage?: string;\n  height?: number | string;\n  width?: number | string;\n  priority?: boolean;\n  customPreload?: boolean;\n  checkBrokenImageInCustomPreload?: boolean;\n  layout?: \"responsive\" | \"intrinsic\" | \"fixed\";\n  testId?: string;\n}\n\nconst Image = React.forwardRef<HTMLDivElement, IImageProps>(\n  (\n    {\n      id,\n      className,\n      itemProp,\n      src,\n      alt,\n      title,\n      fallbackImage,\n      width,\n      height,\n      priority,\n      customPreload,\n      layout = \"fixed\",\n      testId,\n      checkBrokenImageInCustomPreload,\n      // CHECK WITH GABY IF HE IS STILL USING THESE PARAMETERS\n      onSuccess,\n      onError,\n    },\n    ref\n  ): JSX.Element => {\n    const [loading, setLoading] = React.useState(true);\n    const [error, setError] = React.useState(false);\n\n    // React.useEffect(() => {\n    //   // If an image fails to preload, handle it here in order\n    //   // to avoid reloading it again as a broken image.\n    //   if (!priority) {\n    //     const preload = async () => {\n    //       try {\n    //         await preloadImage(src, checkBrokenImageInCustomPreload);\n    //         setLoading(false);\n    //         onSuccess && onSuccess(src);\n    //       } catch (imageURL) {\n    //         setError(true);\n    //         onError && onError(imageURL);\n    //       }\n    //     };\n    //     preload();\n    //   }\n    // }, [src]);\n\n    const isFallback =\n      !src || (customPreload && error) || (customPreload && loading);\n\n    const imageProps: Omit<NextImageProps, \"layout\" | \"height\" | \"width\"> = {\n      id,\n      src: isFallback ? \"/no-images-placeholder.jpg\" : src,\n      alt,\n      title,\n      itemProp,\n      priority,\n    };\n\n    return (\n      <div\n        className={className}\n        ref={ref}\n        data-testid={testId}\n        style={{ width: \"100%\" }}\n      >\n        {width !== undefined && height !== undefined ? (\n          <NextImage\n            {...imageProps}\n            data-testid={isFallback ? \"fallbackImage\" : \"image\"}\n            layout={layout}\n            width={width}\n            height={height}\n          />\n        ) : (\n          <NextImage\n            {...imageProps}\n            data-testid={isFallback ? \"fallbackImage\" : \"image\"}\n            layout=\"fill\"\n          />\n        )}\n      </div>\n    );\n  }\n);\n\nImage.displayName = \"Image\";\n\nexport default Image;\n"]},"metadata":{},"sourceType":"module"}